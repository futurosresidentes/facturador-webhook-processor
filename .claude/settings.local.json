{
  "permissions": {
    "allow": [
      "Bash(node test-webhook.js:*)",
      "Bash(test:*)",
      "Bash(npm start)",
      "Bash(psql:*)",
      "Bash(pg_isready:*)",
      "Bash(export TEST_URL=\"https://facturador-webhook-processor.onrender.com\")",
      "Bash(find . -type f ( -name \"*.md\" -o -name \"*migrate*\" ) -not -path \"*/node_modules/*\" -not -path \"*/.git/*\")",
      "Bash(node -c \"c:\\Sitios\\Facturador_render\\src\\services\\webhookProcessor.js\")",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(32).toString(''hex''))\")",
      "Bash(git add -A)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Agregar autenticaci√≥n Bearer Token y sistema de logs mejorado\n\n- Implementar middleware de autenticaci√≥n Bearer Token\n- Proteger todos los endpoints de consulta (GET /api/webhooks/*)\n- Agregar endpoint /api/webhooks/stats para estad√≠sticas\n- Agregar endpoint /api/webhooks/:id/logs para logs detallados\n- Crear documentaci√≥n completa de seguridad (SEGURIDAD.md)\n- Actualizar documentaci√≥n de API (API_ENDPOINTS.md)\n- Mejorar comentarios en webhookProcessor.js\n- Configurar variable API_BEARER_TOKEN en env\n\nEndpoints protegidos:\n- GET /api/webhooks (lista webhooks)\n- GET /api/webhooks/stats (estad√≠sticas)\n- GET /api/webhooks/:id (detalles)\n- GET /api/webhooks/:id/logs (logs paso a paso)\n- POST /api/webhooks/:id/reprocess (reprocesar)\n\nEndpoints p√∫blicos:\n- POST /api/webhooks (recibir webhooks de ePayco)\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Implementar arquitectura de 10 pasos con tracking avanzado\n\nARQUITECTURA COMPLETA:\n- Flujo reorganizado: CRM/Membres√≠as antes de facturaci√≥n\n- Sistema de tracking por stages con campos current_stage y last_completed_stage\n- 3 nuevos servicios (worldOffice, strapi, callbell) con templates MOCK\n- Endpoints para consultar webhooks incompletos y por stage\n\nNUEVOS ENDPOINTS:\n- GET /api/webhooks/incomplete - Todos los webhooks no completados\n- GET /api/webhooks/stage/:stage - Webhooks en un stage espec√≠fico\n- GET /api/webhooks/stats - Estad√≠sticas mejoradas con contador por stage\n- Filtros avanzados: ?incomplete=true, ?current_stage=X, ?last_completed_stage=Y\n\nBASE DE DATOS:\n- Modelo Webhook actualizado con campos current_stage y last_completed_stage\n- Migraci√≥n SQL lista: migrations/add_stage_tracking.sql\n- √çndices agregados para optimizar consultas por stage\n\nSERVICIOS NUEVOS (Templates listos):\n- src/services/worldOfficeService.js - Pasos 6-9 (facturaci√≥n completa)\n- src/services/strapiService.js - Paso 10 (guardar venta)\n- src/services/callbellService.js - Paso 5 (notificar cliente)\n\nCONFIGURACI√ìN:\n- Variables de entorno agregadas para worldOffice, strapi, callbell\n- .env.example actualizado con nuevas variables\n\nDOCUMENTACI√ìN:\n- FLUJO_PROCESAMIENTO.md - Arquitectura completa del flujo de 10 pasos\n- IMPLEMENTACION_PENDIENTE.md - Gu√≠a de implementaci√≥n con checklist\n- CONSULTAS_WEBHOOKS.md - Gu√≠a completa de endpoints de consulta\n\nFLUJO DE 10 PASOS:\n1. ‚úÖ Extraer Invoice ID\n2. ‚úÖ Consultar FR360\n3. ‚úÖ CRM (ActiveCampaign)\n4. ‚úÖ Membres√≠as (Frapp)\n5. üÜï Notificar Callbell\n6. üÜï Cliente World Office\n7. üÜï Crear Factura\n8. üÜï Contabilizar\n9. üÜï Emitir DIAN\n10. üÜï Guardar Strapi\n\nVENTAJAS:\n- Cliente recibe membres√≠as y notificaci√≥n inmediatamente\n- Facturaci√≥n no bloquea la experiencia del cliente\n- Recuperaci√≥n granular por stage\n- Consultas optimizadas de webhooks atascados\n\nPENDIENTE:\n- Ejecutar migraci√≥n SQL en base de datos\n- Configurar credenciales de APIs (worldOffice, strapi, callbell)\n- Implementar APIs reales (reemplazar MOCKs)\n- Refactorizar webhookProcessor.js para usar flujo completo\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"fix: Configurar auto-migraci√≥n de columnas con Sequelize alter\n\n- Agregar allowNull: true a campos current_stage y last_completed_stage\n- Configurar sequelize.sync({ alter: true }) en producci√≥n\n- Esto agrega columnas autom√°ticamente sin borrar datos existentes\n- Soluciona error: column ''current_stage'' does not exist\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")"
    ],
    "deny": [],
    "ask": []
  }
}
